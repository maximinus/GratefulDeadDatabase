Path of Work / Priorities
-------------------------


After analysis, this order:

1: Download all the GD (ongoing - note not every recording, just every show)
    Es ?  Pr 8
3: Add tabs, other tables and Graphs
    Es 14 Pr 8
4: Look at hosting
    Es 2  Pr 10

Future Work:

Start taking timings properly and add to the DB
    Es 12 Pr 7
Start taking BPM timings and add the to the DB
    Es 5  Pr 6
Split shows up into tours
    Es 7  Pr 6
Generate tour maps to show the tours
    Es 20 Pr 5
Match sources to shows, i.e. each show should have a link to sources
    Es 20 Pr 4
Write code to measure accuratly pitch shift due to speed up
    Es 20 Pr 3


Done work in 2023:

    * Graphs should also show "average" as a dotted line
    * List rows should be coloured
    * Numbers on charts should only be to 2 d.p.
    * Add tabs to top of page for show, years etc...
    * Add footer with simple about info
    * Extract the timings we have, and add them the to real DB
    * Use the real DB to build the binary data. Update the data
    * Add venues and weather to the binary files, load in javascript
    * Have a storage object,
    * an API
    * seperate files for all display tabs
    * Extract the current binary data and add the timings
    * Bring in new data
    * Fill the rarest songs columns
    * Finished uniques / first / last played to year
    * Made sure times of 0 are ignored
    * Added the venue information
    * Added the day to the date information
    * Fixed bad header in set information

Changes to the current website:

Current:
    Move to Visual Studio code
    Add ES6 modules
    Add Celcius to the weather y axis
    Add pop-outs for all charts on new pages
    Move search to upper right, shared on tabs
    Allow for searching on all tabs
    Songs should show how common they are ("7th most commonly played")
    Add "total played" to the "played per year" chart
    "St. Stephen" should get you St Stephen, so allow searches on alternate names
        I.e. add levenstein distance
    Clicking on found name in drop-down automatically updates song
        (also when enter is pressed)
    The scrollbar on list pop-ups needs to reset on a new pop-up
    Make all dates hyperlinks
    Make all links open up the other tabs with the correct information
    Make the system remember where you were last time
    For average position in show, formulate it as a % position along the show. Place the average set marker as a bar under the position average
        Where there are 3 sets, ignore the whole show
    Add unit tests based on modules


Other calculations:
    Must start collecting BPM and add it to the DB.
    This means grabbing ALL the GD. I have a NAS just for this.
    Try and start timing some songs. Just a tour (like spring 78).
        Work out the exact workflow to the point of estimating how long this will take.


For the show data:
    * List the setlist
    * Show rarest combos all time / this year
    * Show rarest songs all time / this year
    * Show long / short for the year
    Show the times underneath the songs
    * Show the weather of the show as some kind of graph
    Show the venue information
    All songs have hyperlinks to the song info
    Have a "next / previous" show
    Have a "next / previous" for the venue
    Show the day of the show


For the year data:
    Show the year, total shows
    Show:
        most common songs
        most common pairings (minus drums > space)
        longest shows
        shortest shows
        longest songs
        shortest songs
        my picks for the year
        most common venues
        hottest shows
        coldest shows
        unique songs
        songs introduced
        songs stopped playing (except uniques)
            (i.e. played this year and never after)
        longest since last played
        Most similar sets
        Most dissimilar sets
        Average show to represent the year

For the song data
    First played
    Last played
    Common into
    Common out of
    Longest
    Shortest
    Average per year
    Average set position

For the about page:
    A page about means
    Be brave and show a photo

For the download page:
    Point to repo, which should have a decent setup by this point
    Download as a CSV file 
    Download as SQL
