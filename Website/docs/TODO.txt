Path of Work / Priorities
-------------------------

Future Work:
    Start taking timings properly and add to the DB
    Start taking BPM timings and add the to the DB
    Split shows up into tours
    Generate tour maps to show the tours
    Match sources to shows, i.e. each show should have a link to sources
    Write code to measure accuratly pitch shift due to speed up


2024 TODO list:

Overall:
    Test the data is not being pulled all the time
    Look at hosting

Known important bugs that must be fixed:
    Back button seems spotty at times
    URL should be shown and a bookmark should be able to be set
    Make sure the data always use a slug format
        - thie means converting every single "convertToLink" call

Songs:
    Start a list of shows that have no recordings and add to the database

Shows
    If there is no weather data, mention it in the box
    The song names in the setlist need a link

Years:
    Hottest and coldest shows should show C with a F switch, or both temperatures
    Have a button for next / previous show

Venues
    There should be a map of the location, obtained from public domain records
    Every show played box should be bigger on the bottom
    Should be a "most common songs" table.
    Should be a "hottest shows"
    Should be a "coldest shows"
    Should be a "wettest shows"
    Should be a timeline showing shows per year
    Should ba timeline showing shows in each month

Other stuff after the above is done:
    Comment the code so it's a bit easier to understand
        Better: Move to using typescript
                Build up the storage class with the methods needed
                The sub-classes will do most work
                The landing page needs to be it's own file
    Add shows with no setlists (use the original Jerrybase)
    Check with Pauls timings
    Add seque information
    Finish Combos page
    Download all the GD (ongoing - note not every recording, just every show)


Done work in 2024:
    * Server should update automatically if there have been file changes
    * On "Played per year" graph, change "Avg when played" to "Avg from when first played"
    * In "Last versions" the text should maybe be "X days UNTIL next"
    * In "First versions" and "last versions" the ends should say "last version" and "first version"
    * When the table popup is displayed, unless it is the same as the last one, it should reset the scrollbar
    * In "Average Set Position", the title is "Average Length", so fix
    * In "Average set position", the average line should not have a break in it
    * The footer shouldn't be a box, just a horizontal line
    * Make set numbers in show list bold
    * Only played this year change to "Unique to this year"
    * "Only played this year" should show total times played
    * "Never played again" should show last time played
    * "New songs" should show first time played
    * "Only played this year" songs should be in "never played again"
    * "Wettest shows" shows no data
    * "Wettest shows" has no space between number and "hrs rain"
    * "Wettest shows" should not include dry shows
    * "This was the nth time played here" is off by 1
    * Capitalised AM and PM on weather chart
    * Hourly precipitation data is imported correctly
    * Weather chart displays rainfall for the period
    * The tooptip for the rain line in weather works correctly
    * The weather data is imported correctly, in Python and Javascript

Done work in 2023:
    * Graphs should also show "average" as a dotted line
    * List rows should be coloured
    * Numbers on charts should only be to 2 d.p.
    * Add tabs to top of page for show, years etc...
    * Add footer with simple about info
    * Extract the timings we have, and add them the to real DB
    * Use the real DB to build the binary data. Update the data
    * Add venues and weather to the binary files, load in javascript
    * Have a storage object
    * An API
    * Seperate files for all display tabs
    * Extract the current binary data and add the timings
    * Bring in new data
    * Fill the rarest songs columns
    * Finished uniques / first / last played to year
    * Made sure times of 0 are ignored
    * Added the venue information
    * Added the day to the date information
    * Fixed bad header in set information
    * Moved to Visual Studio code
    * Fix the venue information
    * Add Celcius to the weather y axis
    * Put weather in a hash map
    * Added hottest, coldest and wettest shows to year
    * Show the times underneath the songs
    * Added longest songs, longest and shortest shows
    * Sort out uniques
    * Added year tab details
    * Added recommended shows - a curated list with no comments
    * Moved search to upper right, shared on tabs
    * Vertically center text in the middle of card headers
    * Clicking on found name in drop-down automatically updates song
    * Allow for searching on all tabs
    * Made all dates and songs hyperlinks
    * Aligned tables so left is left and right column is on the right
    * Added venue page
    * Made all venues links
    * Centered text properly in top cards for all tabs
    * Made the "back" button work as well
    * Allowed searching for venues
    * Added date link to longest songs
    * Added 2 new graphs in years tab
    * Add about tab
    * Tested all modal links
    * Made all modal links work
    * All graphs work
    * Fixed tooltip on average song length
    * If the weather data does not exist, informs the user
    * Allowed sets to overflow to more than one line
    * Fix for no weather when weather data exists but shows 0 in all temps
    * Added played % per year for combos
    * Added average length graph on combos
    * Added box to allow choices when 2 shows are searched for

Other calculations:
    Must start collecting BPM and add it to the DB.
    This means grabbing ALL the GD. I have a NAS just for this.
    Try and start timing some songs. Just a tour (like spring 78).
        Work out the exact workflow to the point of estimating how long this will take.

For the show data:
    Have a "next / previous" show
    Have a "next / previous" for the venue

For the about page:
    A page about means
    Be brave and show a photo

For the download page:
    Point to repo, which should have a decent setup by this point
    Download as a CSV file 
    Download as SQL
